(window["webpackJsonp"]=window["webpackJsonp"]||[]).push([[3],{"02af":function(n,t,r){"use strict";r.r(t);var e=function(){var n=this,t=n.$createElement,r=n._self._c||t;return r("div",[r("q-markdown",{attrs:{extend:n.extendMarkdown,src:n.MainComponent}})],1)},i=[],o=r("ded3"),a=r.n(o),l=(r("d81d"),r("ac1f"),r("1276"),r("a15b"),r("e260"),r("d3b7"),r("ddb0"),r("fb6a"),r("4e82"),r("6821")),s=(r("d958"),function(n){if(!n)return"";var t="",r=n.split("/");return r.shift(),r.pop(),t=r.join("/"),t?"/"+t+"/":""}),c=function(n){n=n||"";var t=n.split("/"),r=t.length;return t[r-1]},d=function(n){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"md",r=arguments.length>3&&void 0!==arguments[3]&&arguments[3],e=!(arguments.length>4&&void 0!==arguments[4])||arguments[4];console.log("当前 require.context---",n),console.log("当前 field_components.keys()---",n.keys());var i=n.keys(),o={},d=[],m={},h=[];return i.map((function(e){var i=e.slice(2,e.length-t.length-1),a="module_"+l(e);h.push(i),m[i]={value:a,relative_path:e,relative_folder:s(e)},console.log("x---",e),o[a]=r?"\n            <div>\n            <code>\n              ".concat(n(e).default,"\n            </code>\n            </div>\n            "):n(e).default})),h.sort((function(n,t){return parseFloat(n)-parseFloat(t)})),h.map((function(n){d.push({label:e?c(n):n,value:m[n]["value"],modules_obj:a()({},m[n])})})),console.log("all_components------------",o),console.log("all_modules---------------",d),{all_components:o,all_modules:d}},m=r("448a"),h=r.n(m),p=(r("4de4"),r("2f62")),g={data:function(){return{tab:"",tab_level:1,is_active:!1}},computed:a()({},Object(p["c"])(["get_current_selected_right_menu"])),created:function(){this.is_active=!0,this.fix_right_menu_config()},watch:{tab:function(){this.tab||this.fix_right_menu_config()},get_current_selected_right_menu:function(n,t){this.tab=this.get_current_selected_right_menu["t"+this.tab_level]}},methods:a()(a()({},Object(p["b"])(["set_right_menu_fix_config"])),{},{fix_right_menu_config:function(){this.set_right_menu_fix_config({tl:this.tab_level,tabs:this.tabs||[],tv:this.tab||this.tabs[0]["value"]})}}),beforeDestroy:function(){this.is_active=!1}},u=(r("99af"),r("a434"),r("07ac"),function(){var n=this,t=n.$createElement,r=n._self._c||t;return r("div",{staticClass:"q-my-md q-mx-sm"},[r("div",{staticClass:"q-mb-md row q-gutter-x-md q-gutter-y-sm"},[r("q-select",{staticStyle:{width:"300px"},attrs:{dense:"",filled:"","use-input":"","hide-selected":"","fill-input":"","input-debounce":"0",options:n.topic_options_filtered},on:{filter:n.filterFn,"filter-abort":n.abortFilterFn,input:n.handle_topic_change},scopedSlots:n._u([{key:"before",fn:function(){return[n._v("\n        主题\n      ")]},proxy:!0}]),model:{value:n.topic,callback:function(t){n.topic=t},expression:"topic"}}),r("q-select",{staticStyle:{width:"300px"},attrs:{dense:"",filled:"",options:n.column_options},on:{input:n.handle_column_change},scopedSlots:n._u([{key:"before",fn:function(){return[n._v("\n        列数\n      ")]},proxy:!0}]),model:{value:n.column,callback:function(t){n.column=t},expression:"column"}})],1),r("q-markup-table",{attrs:{dense:""}},[r("thead",[r("tr",[r("th",{staticClass:"text-left text-weight-bolder  ",attrs:{colspan:n.column}},[n._v("\n          "+n._s(n.table_title?n.table_title+"------":"")+"当前词条数量："+n._s(n.word_total)+"\n        ")])])]),r("tbody",[n._l(n.table_data,(function(t,e){return[n.compute_if_show(t)?r("tr",{key:e,class:n.compute_topic_options_style(t)},n._l(n.column,(function(e){return r("td",{key:e,staticClass:"text-left"},[n._v("\n            "+n._s(t[e-1])+"\n          ")])})),0):n._e()]}))],2)])],1)}),f=[],b=(r("a9e3"),r("caad"),r("2532"),{data:function(){return{topic:"全部",column:2,topic_options_filtered:[],topic_options_all:[]}},props:{table_title:{type:String,default:""},word_total:{type:Number,default:0},topic_options:{type:Array,default:function(){return[]}},column_options:{type:Array,default:function(){return[]}},table_data:{type:Array,default:function(){return[]}},show_empty_line:!1},watch:{topic_options:function(n,t){this.init_topic_options_related()},column_options:function(n,t){this.init_column()}},created:function(){this.init_topic_options_related(),this.init_column(),this.handle_column_change(),this.handle_topic_change()},methods:{init_topic_options_related:function(){this.topic_options_all=h()(this.topic_options),this.topic_options_filtered=h()(this.topic_options)},filterFn:function(n,t,r){var e=this;console.log("this.topic_options_all",this.topic_options_all),setTimeout((function(){t((function(){if(""===n)e.topic_options_filtered=h()(e.topic_options_all);else{var t=n.toLowerCase();e.topic_options_filtered=e.topic_options_all.filter((function(n){return n.toLowerCase().indexOf(t)>-1}))}e.$forceUpdate()}),(function(t){""!==n&&t.options.length>0&&(t.setOptionIndex(-1),t.moveOptionSelection(1,!0))}))}),300)},abortFilterFn:function(){},handle_column_change:function(){this.$emit("handle_column_change",this.column)},handle_topic_change:function(){this.$emit("handle_topic_change",this.topic)},init_column:function(){var n=this.$q.platform.is.desktop,t=window.innerWidth;t=n?t-200:t-100,t=t<370?370:t,console.log("ww",t);var r=Math.ceil(t/350);r=r<1?1:r,t<400&&(r=1),r=r>8?8:r,this.column=r},compute_topic_options_style:function(n){var t="",r=1==n.length&&this.topic_options.includes(n[0]);return t=r?"bg-teal-4":"",t},compute_if_show:function(n){if(this.show_empty_line)return!0;var t=n.filter((function(n){return n}));return t.length>0}}}),_=b,S=r("2877"),v=Object(S["a"])(_,u,f,!1,null,"352286d7",null),x=(v.exports,r("7db0"),{data:function(){return{relative_path:"",tab:"",tabs:[],MainComponent:"",img_prefix:"./img/linux/heima-Linux云计算/讲义/"}},methods:{extendMarkdown:function(n){var t=this;console.log(n.renderer.rules);var r=n.renderer.rules.html_block;n.renderer.rules.html_block=function(n,e,i,o,a){console.log(" md.renderer.rules.html_block----------------");var l=n[e];if(console.log("1"),l.content.includes("<img")){console.log("token-- ",l);var s="";s=l.content;var c=s.split('src="'),d="",m=c[1];c[0],t.img_prefix,c[1],d=m.includes("http")?c[0]+' src="'+m:c[0]+' src="'+t.img_prefix+m,l.content=d}return l.attrSet("class","q-markdown--token  "),r(n,e,i,o,a)},n.renderer.rules.image=function(n,r,e,i,o){console.log("md.renderer.rules.image---tokens--- ",n);var a=n[r];console.log("3"),a.attrSet("class","q-markdown--image"),console.log("token--- "+r+"-----",a);var l=a.attrGet("src");return console.log(l),l.includes("http")?a.attrSet("src",l):a.attrSet("src",t.img_prefix+l),o.renderToken(n,r,e)}},compute_img_prefix:function(){var n=this;if(this.MainComponent){var t=this.tabs.find((function(t){return t["value"]==n.tab}));if(t&&t["modules_obj"]){var r=this.relative_path;this.img_prefix="."+r+(t["modules_obj"]["relative_folder"]||"")}else this.img_prefix="."+relative_path}console.log(" this.img_prefix ---",this.img_prefix)}}}),y="/books/html/md/",C=d(r("c174"),"md",!0),w=C.all_components,k=C.all_modules,M={mixins:[g,x],data:function(){return{relative_path:y,img_prefix:"."+y,tab:k[0].value,tab_level:1,MainComponent:w[k[0].value],tabs:k}},watch:{tab:function(n,t){this.MainComponent=w[this.tab],this.compute_img_prefix()}}},E=M,L=Object(S["a"])(E,e,i,!1,null,"0db94b6c",null);t["default"]=L.exports},"7cb7":function(n,t,r){"use strict";r.r(t),t["default"]='> # **CSS进阶**\r\n>\r\n\r\n> \r\n>\r\n> ![image-20211202231240734](03CSS进阶.assets/image-20211202231240734.png)\r\n>\r\n> **1：CSS三大特性**\r\n> \t`层叠性`\r\n>\r\n> ```html\r\n> \t\t相同选择器给设置相同的样式，此时一个样式就会覆盖（层叠）另一个冲突的样式\r\n> \t\t样式冲突，遵循的原则是就近原则，哪个样式离结构近，就执行哪个样式\r\n> \t\t样式不冲突，不会层叠\r\n> ```\r\n>\r\n> ​\t`继承性`\r\n> ​\t\t\r\n>\r\n> ```html\r\n> 子标签会继承父标签的某些样式，如文本颜色和字号\r\n> \t\t恰当地使用继承可以简化代码，降低 CSS 样式的复杂性。\r\n> ```\r\n>\r\n> ​\t\t`行高继承`\r\n> ​\t\r\n>\r\n> ```html\r\n> \t\t行高可以跟单位也可以不跟单位\r\n> \t\t\t如果子元素没有设置行高，则会继承父元素的行高为 1.5 倍数\r\n> \t\t\t此时子元素的行高是：当前子元素的文字大小 * 1.5\r\n> \t\t\tbody 行高 1.5  这样写法最大的优势就是里面子元素可以根据自己文字大小自动调整行高\r\n> ```\r\n>\r\n> ​\t`优先级`\r\n>\r\n> ![image-20211202231757499](03CSS进阶.assets/image-20211202231757499.png)\r\n>\r\n> ​\t\t`当同一个元素指定多个选择器，就会有优先级的产生`\r\n> ​\t\t\r\n>\r\n> ```html\r\n> \t选择器相同，则执行层叠性\r\n> \t\t\t选择器不同，则根据选择器权重执行\r\n> \t\t\r\n> ```\r\n>\r\n> \r\n\r\n> **2：盒子模型 ***\r\n>\r\n> ![image-20211202232716709](03CSS进阶.assets/image-20211202232716709.png)\r\n>\r\n> ​\t`网页布局的核心本质`\r\n> ​\t\t\r\n>\r\n> ```html\r\n> 就是利用 CSS 摆盒子。\r\n> \t\t先准备好相关的网页元素，网页元素基本都是盒子 Box \r\n> \t\t利用 CSS 设置好盒子样式，然后摆放到相应位置。\r\n> \t\t往盒子里面装内容\r\n> ```\r\n>\r\n> ![image-20211202233102713](03CSS进阶.assets/image-20211202233102713.png)\r\n>\r\n> ​\t`盒子模型（Box Model）组成`\r\n> ​\t\t把 HTML 页面中的布局元素看作是一个矩形的盒子，也就是一个盛装内容的容器\r\n> ​\t\t边框、外边距、内边距、实际内容\r\n> ​\t\t\r\n\r\n\r\n\r\n> ![image-20211202235456468](03CSS进阶.assets/image-20211202235456468-16384623907841.png)\r\n\r\n> ```html\r\n> \r\n> \r\n> 边框（border）\r\n> \t 语法   border : border-width || border-style || border-color;  \r\n> \t\r\n> \t边框样式 border-style\r\n> \t\tnone：没有边框即忽略所有边框的宽度（默认值）\r\n> \t\tsolid：边框为单实线(最为常用的)\r\n> \t\tdashed：边框为虚线  \r\n> \t\tdotted：边框为点线\r\n> \t边框简写\r\n> \t\t border: 1px solid red;  \r\n> \t边框分开写法\r\n> \t\t border-top: 1px solid red;  /* 只设定上边框， 其余同理 */   \r\n> \t表格的细线边框\r\n> \t\tborder-collapse 属性控制浏览器绘制表格边框的方式，它控制相邻单元格的边框\r\n> \t\t border-collapse:collapse; 表示相邻边框合并在一起\r\n> \t边框会影响盒子实际大小\r\n> \t\t边框会额外增加盒子的实际大小\r\n> \t\t测量盒子大小的时候,不量边框。\r\n> \t\t如果测量的时候包含了边框,则需要 width/height 减去边框宽度\r\n> 内边距（padding）\r\n> \tpadding 属性用于设置内边距，即边框与内容之间的距离。\r\n> ```\r\n>\r\n\r\n\r\n\r\n​\t\t\r\n\r\n\r\n\r\n> \r\n>\r\n> ![image-20211203001826304](03CSS进阶.assets/image-20211203001826304.png)\r\n>\r\n> **`内边距会影响盒子实际大小`**\r\n> \t\t\r\n>\r\n> ```html\r\n> \t如果盒子已经有了宽度和高度，此时再指定内边框，会撑大盒子\r\n> \t\t\t盒子本身没有指定width/height属性, 则此时padding不会撑开盒子大小。\r\n> \t\t\t如果保证盒子跟效果图大小保持一致，则让 width/height 减去多出来的内边距大小即可\r\n> ```\r\n>\r\n> \r\n\r\n\r\n\r\n\r\n\r\n> ```html\r\n> 外边距（margin）\r\n> \t`margin 属性用于设置外边距，即控制盒子和盒子之间的距离`\r\n> 外边距可以让块级盒子水平居中的两个条件\r\n> \t盒子必须指定了宽度（width）。\r\n> \t盒子左右的外边距都设置为 auto 。\r\n> \t下三种都可以\r\n> ```\r\n>\r\n> ```html\r\n> margin-left: auto;   margin-right: auto;\r\n> margin: auto;\r\n> margin: 0 auto;\r\n> ```\r\n>\r\n> ​\t![image-20211203003827630](03CSS进阶.assets/image-20211203003827630.png)\r\n\r\n\r\n\r\n\r\n\r\n> ![image-20211203004951048](03CSS进阶.assets/image-20211203004951048.png)\r\n>\r\n> \r\n>\r\n> ​\t\t`**外边距合并**`\r\n> ​\t\t\t`相邻块元素垂直外边距的合并`\r\n> ​\t\t\t\r\n>\r\n> ```html\r\n> \t当上下相邻的两个块元素（兄弟关系）相遇时，\r\n> \r\n> 如果上面的元素有下外边距 margin-bottom，下面的元素有上外边距 margin-top ，\r\n> \r\n> 则他们之间的垂直间距不是 margin-bottom 与 margin-top 之和。\r\n> \r\n> 取两个值中的较大者这种现象被称为相邻块元素垂直外边距的合并.\r\n> 解决方案：尽量只给一个盒子添加 margin 值\r\n> ```\r\n>\r\n> \r\n>\r\n> `嵌套块元素垂直外边距的塌陷`\r\n> 对于两个嵌套关系（父子关系）的块元素，父元素有上外边距同时子元素也有上外边距，此时父元素会塌陷较大的外边距值\t\r\n> 解决方案：\r\n>\r\n> - 可以为父元素定义上边框。\r\n> - 可以为父元素定义上内边距。\r\n> - 可以为父元素添加 overflow:hidden。(推举)\t\t\r\n>\r\n> ​\t\r\n\r\n\r\n\r\n> ![image-20211203010117393](03CSS进阶.assets/image-20211203010117393.png)\r\n>\r\n> **`清除内外边距`**\r\n> \t\r\n>\r\n> ```html\r\n> 网页元素很多都带有默认的内外边距，而且不同浏览器默认的也不一致\r\n> \r\n>   * {\r\n>     padding:0;   /* 清除内边距 */\r\n>       margin:0;    /* 清除外边距 */\r\n>     }\r\n> ```\r\n>\r\n> \r\n\r\n> \r\n>\r\n> ![image-20211203011142486](03CSS进阶.assets/image-20211203011142486.png)\r\n>\r\n> ```html\r\n> **3：PS操作及图片**\r\n> \t`**PS基础操作**`\r\n> \t\t文件→打开 ：可以打开我们要测量的图片\r\n> \t\tCtrl+R：可以打开标尺，或者 视图→标尺\r\n> \t\t右击标尺，把里面的单位改为像素\r\n> \t\tCtrl+ 加号(+)可以放大视图， Ctrl+ 减号(-)可以缩小视图\r\n> \t\t按住空格键，鼠标可以变成小手，拖动 PS 视图\r\n> \t\t用选区拖动  可以测量大小\r\n> \t\tCtrl+ D 可以取消选区，或者在旁边空白处点击一下也可以取消选区\r\n> \t\t图片格式\r\n> \t1. jpg 图像格式：JPEG（JPG）对色彩的信息保留较好，高清，颜色多，我们产品类的图片经常用jpg格式\r\n> \t2. gif 图像格式：GIF格式最多只能储存256色，所以通常用来显示简单图形及字体，但是可以保存透明背景和动画效果实际经常用于一些图片小动画效果\r\n> \t3. png图像格式是一种新的网络图形格式，结合了GF和JPEG的优点，具有存储形式丰富的特点，能够保持透明背景，如果想要切成背景透明的图片，请选择png格式\r\n> \t4. PSD图像格式PSD格式是 Photoshop的专用格式，里面可以存放图层、通道、遮罩等多种设计稿。对我们前端人员来说，最大的优点是我们可以直接从上面复制文字，获得图片，还可以测量大小和距离\r\n> 切图\r\n> \t图层切图\r\n> \t\t最简单的切图方式：右击图层 → 导出 → 切片。\r\n> \t\tCtrl+e 合并两个图层，导出\r\n> \t切片切图\r\n> \t\t 利用切片工具手动划出\r\n> \t\t文件菜单 → 存储为 web 设备所用格式 → 选择我们要的图片格式 → 存储 。\r\n> ```\r\n>\r\n> \r\n\r\n\r\n\r\n\r\n\r\n> ![image-20211203012313181](03CSS进阶.assets/image-20211203012313181.png)\r\n>\r\n> **4：圆角和阴影**\r\n> \t`**圆角**`\r\n>\r\n> ```html\r\n> \t\tborder-radius 属性用于设置元素的外边框圆角\r\n> \t\tborder-radius: 园的半径值;\r\n> \t\t值还可以使用百分比，盒子的百分比\r\n> ```\r\n>\r\n> `分开写：`\r\n>\r\n> - ```html\r\n>   - 左上角 border-top-left-radius、\r\n>   - 右上角 border-top-right-radius、\r\n>   - 右下角 border-bottom-right-radius \r\n>   - 左下角 border-bottom-left-radius\r\n>   ```\r\n>\r\n>   `盒子阴影`\r\n>   \t \r\n>\r\n>   ```\r\n>   语法  box-shadow: h-shadow v-shadow blur spread color inset; \r\n>   \th-shadow：必需。水平阴影的位置。允许负值\r\n>   v-shadow：必需。垂直阴影的位置。允许负值\r\n>   blur：可选。模糊距离。\r\n>   spread：可选。阴影的尺寸。\r\n>   color：可选。阴影的颜色。请参阅CSS颜色值。\r\n>   inset：可选。将外部阴影（ outset）改为内部阴影。\r\n>   ```\r\n>\r\n>   `**文字阴影**`\r\n>\r\n>   ```\r\n>   \t语法 text-shadow: h-shadow v-shadow blur color;\r\n>   \th-shadow：必需。水平阴影的位置。允许负值\r\n>   v-shadow：必需。垂直阴影的位置。允许负值\r\n>   blur：可选。模糊的距离\r\n>   color：可选。阴影的颜色\r\n>   ```\r\n>\r\n>   \r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n> <img src="03CSS进阶.assets/image-20211203013857913.png" alt="image-20211203013857913" style="zoom: 200%;" />\r\n>\r\n> **5：浮动 ***\r\n> \t为什么需要浮动？ 有很多的布局效果，标准流没有办法完成，此时就可以利用浮动完成布局。 因为浮动可以改变元素标签默认的排列方式.\r\n> \t`**浮动语法**`\r\n>\r\n> ```html\r\n> \t\tnone 元素不浮动（默认值）;\r\n> left 元素向左浮动;\r\n> right  元素向右浮动\r\n> ```\r\n>\r\n> ​\t`浮动特性`\r\n>\r\n> ```html\r\n> \t1、浮动元素会脱离标准流(脱标：浮动的盒子不再保留原先的位置)\r\n> \t\t2、浮动的元素会一行内显示并且元素顶部对齐\r\n> \t\t3、浮动的元素会具有行内块元素的特性\r\n> ```\r\n>\r\n> ​\t`浮动元素经常和标准流父级搭配使用`\r\n>\r\n> ```html\r\n> \t\t先用标准流父元素排列上下位置, 之后内部子元素采取浮动排列左右位置.  符合网页布局第一准侧\r\n> ```\r\n>\r\n> `浮动布局注意点`\r\n>\r\n> ```html\r\n> \t浮动和标准流的父盒子搭配。\r\n> \t一个元素浮动了，理论上其余的兄弟元素也要浮动。\r\n> ```\r\n>\r\n> **清除浮动**\r\n>\r\n> \t为什么需要清除浮动？\r\n> \t\r\n> \t由于父级盒子很多情况下，不方便给高度，但是子盒子浮动又不占有位置，最后父级盒子高度为 0 时，就会影响下面的标准流盒子。\r\n> `清除浮动本质：`\r\n>\r\n> `清除浮动的本质是清除浮动元素造成的影响：浮动的子标签无法撑开父盒子的高度`\r\n>\r\n> ```html\r\n> 如果父盒子本身有高度，则不需要清除浮动\r\n> 清除浮动之后，父级就会根据浮动的子盒子自动检测高度。\r\n> 父级有了高度，就不会影响下面的标准流了\r\n> ```\r\n>\r\n> `语法：选择器{clear:属性值;}` \r\n>\r\n> ![image-20211203015437915](03CSS进阶.assets/image-20211203015437915.png)\r\n>\r\n> ```\r\n> 我们实际工作中， 几乎只用 clear: both;\r\n> 清除浮动的策略是:  闭合浮动. \r\n> ```\r\n>\r\n> `清除浮动的多种方式`\r\n> \t\t`额外标签法`\r\n>\r\n> ```html\r\n> \t\t\t额外标签法会在浮动元素末尾添加一个空的标签\r\n> \t\t\t额外标签法也称为隔墙法，是 W3C 推荐的做法\r\n> \t\t\t例如 <div style="clear:both"></div>，或者其他标签（如<br />等）。\r\n> ```\r\n>\r\n> ​\t\t`父级添加 overflow 属性`\r\n>\r\n> ```html\r\n> 给父级添加 overflow 属性，将其属性值设置为 hidden、 auto 或 scroll \r\n> \t\t\t缺点：无法显示溢出的部分\r\n> ```\r\n>\r\n> ​\t\t`父级添加after伪元素`\r\n>\r\n> ```\r\n>  .clearfix:after { \r\n> \r\n> content: ""; \r\n>    display: block; \r\n>    height: 0; \r\n>    clear: both; \r\n>    visibility: hidden;  \r\n>  } \r\n> \r\n>  .clearfix {  /* IE6、7 专有 */ \r\n>    *zoom: 1;\r\n>  }  \r\n> ```\r\n>\r\n> ​\t\t\r\n>\r\n> `父级添加双伪元素`\r\n>\r\n> ```\r\n> \t\t\t .clearfix:before,.clearfix:after {\r\n>    content:"";\r\n>    display:table; \r\n>  }\r\n>  .clearfix:after {\r\n>    clear:both;\r\n>  }\r\n>  .clearfix {\r\n>     *zoom:1;\r\n>  }  \r\n> ```\r\n>\r\n> ![image-20211203020335219](03CSS进阶.assets/image-20211203020335219.png)\t\t\r\n>\r\n> \r\n\r\n\r\n\r\n> \r\n>\r\n> <img src="03CSS进阶.assets/image-20211203020854983.png" alt="image-20211203020854983" style="zoom:200%;" />\r\n>\r\n> **6：定位 ***\r\n> \t`定位的概念和组成`\r\n>\r\n> ```html\r\n> 将盒子定在某一个位置，所以定位也是在摆放盒子， 按照定位的方式移动盒子\r\n> 定位 = 定位模式 + 边偏移\r\n> 定位模式 用于指定一个元素在文档中的定位方式\r\n> 边偏移则决定了该元素的最终位置。\r\n> ```\r\n>\r\n> `边偏移（方位名词）`\r\n>\r\n> ```html\r\n> \t边偏移 就是定位的盒子移动到最终位置。\r\n> \t有 top(顶)、bottom(底)、left(左)、 right(右)  4 个属性。\r\n> \t定位的盒子有了边偏移才有价值。 一般情况下，凡是有定位地方必定有边偏移。\r\n> ```\r\n>\r\n> `定位模式 (position)`\r\n>\r\n> ```html\r\n> 选择器 { \r\n>     position: 属性值; \r\n> }\r\n> static 静态定位；\r\n> relative 相对定位；\r\n> absolute 绝对定位；\r\n> fixed 固定定位；\r\n> ```\r\n>\r\n> `相对定位(relative) *` \r\n>\r\n> ```html\r\n> 相对定位是元素在移动位置的时候，是相对于它自己原来的位置来说的\r\n> 它是相对于自己原来的位置来移动的\r\n> 原来在标准流的位置继续占有，后面的盒子仍然以标准流的方式对待它\r\n> 相对定位并没有脱标\r\n> ```\r\n>\r\n> `绝对定位(absolute) *` \r\n>\r\n> ```html\r\n> 绝对定位是元素在移动位置的时候，是相对于它祖先元素来说的\r\n> 完全脱标—— 完全不占位置；\r\n> 父元素没有定位，则以浏览器为准定位（Document 文档）\r\n> 父元素要有定位\r\n> 如果没有祖先元素或者祖先元素没有定位，则以浏览器为基准定位（Document 文档）。\r\n> 如果祖先元素有定位（相对、绝对、固定定位），则以最近一级的有定位祖先元素为参考点移动位置。\r\n> 绝对定位不再占有原先的位置。所以绝对定位是脱离标准流的。\r\n> ```\r\n>\r\n> `子绝父相 *`\r\n>\r\n> ```html\r\n> 子级是绝对定位的话，父级要用相对定位。\r\n> 子级绝对定位，不会占有位置，可以放到父盒子里面的任何一个地方，不会影响其他的兄弟盒子。\r\n> 父盒子需要加定位限制子盒子在父盒子内显示。\r\n> 父盒子布局时，需要占有位置，因此父亲只能是相对定位。\r\n> 因为父级需要占有位置，因此是相对定位， 子盒子不需要占有位置，则是绝对定位\r\n> 子绝父相不是永远不变的，如果父元素不需要占有位置，子绝父绝 也会遇到\r\n> 父级要占有位置，子级要任意摆放，这就是子绝父相的由来。\r\n> ```\r\n>\r\n> `固定定位(fixed)` \r\n>\r\n> ```html\r\n> \t固定于浏览器可视区的位置\r\n> \t\t以浏览器的可视窗口为参照点移动元素。\r\n> \t\t\t跟父元素没有任何关系\r\n> \t\t\t不随滚动条滚动。\r\n> \t\t不在占有原先的位置\r\n> \t\t\t完全脱标—— 完全不占位置\r\n> \t\t\t只认 浏览器的可视窗口\r\n> \t\t\t跟父元素没有任何关系；单独使用的\r\n> ```\r\n>\r\n> \r\n>\r\n> `粘性定位(sticky)`\r\n>\r\n> ```html\r\n> 是相对定位和固定定位的混合\r\n> \t选择器 { \r\n>  position: sticky; \r\n>  top: 10px; \r\n> \r\n>  }\r\n> 以浏览器的可视窗口为参照点移动元素（固定定位特点）\r\n> 粘性定位占有原先的位置（相对定位特点）\r\n> 必须添加 top 、left、right、bottom 其中一个 才有效\r\n> 兼容性较差，IE 不支持。\r\n> ```\r\n>\r\n> ​\t![image-20211203022207398](03CSS进阶.assets/image-20211203022207398.png)\r\n>\r\n>  `堆叠顺序（z-index）`\r\n>\r\n> ```html\r\n> 在使用定位布局时，可能会出现盒子重叠的情况。此时，可以使用 z-index 来控制盒子的前后次序 (z轴)\r\n> `z-index 的特性`\r\n> 属性值：正整数、负整数或 0，默认值是 0，数值越大，盒子越靠上；\r\n> 如果属性值相同，则按照书写顺序，后来居上；\r\n> 数字后面不能加单位。\r\n> 注意：z-index 只能应用于相对定位、绝对定位和固定定位的元素，其他标准流、浮动和静态定位无效。\r\n> ```\r\n>\r\n> `定位(position)的拓展`\r\n>\r\n> ```html\r\n> \t**绝对定位的盒子居中**\r\n> \t\t让盒子的左侧移动到父级元素的水平中心位置\r\n> \t\t让盒子向左移动自身宽度的一半\r\n> \t**定位特殊特性**\r\n> \t\t行内元素添加绝对或者固定定位，可以直接设置高度和宽度。\r\n> \t\t块级元素添加绝对或者固定定位，如果不给宽度或者高度，默认大小是内容的大小。\r\n> \t**脱标的盒子不会触发外边距塌陷**\r\n> \t\t我们给盒子改为了浮动或者定位，就不会有垂直外边距合并的问题了\r\n> \t**绝对定位**（固定定位）会完全压住盒子\r\n> ```\r\n\r\n\r\n​\t\r\n\r\n\r\n\r\n> ![image-20211203023145529](03CSS进阶.assets/image-20211203023145529.png)\r\n>\r\n> \r\n>\r\n> **7：元素的隐藏与显示**11111111111\r\n> \t`display 显示（重点）`\r\n>\r\n> ```html\r\n> display: none 隐藏对象\r\n> display：block 除了转换为块级元素之外，同时还有显示元素的意思。\r\n> display 隐藏元素后，不再占 有原来的位置。\r\n> ```\r\n>\r\n> ​\t`visibility 可见性`\r\n>\r\n> ```html\r\n> visibility：visible ; 　元素可视\r\n> visibility：hidden; 　  元素隐藏\r\n> visibility 隐藏元素后，继续占有原来的位置\r\n> ```\r\n>\r\n> ​\t`overflow 溢出（重点）`\r\n>\r\n> ```html\r\n> overflow 属性指定了如果内容溢出一个元素的框（超过其指定高度及宽度） 时，会发生什么。\r\n> visible: 不剪切内容也不添加滚动条\r\n> hidden: 不显示超过对象尺寸的内容，超出的部分隐藏掉\r\n> scroll: 不管超出内容否，总是显示滚动条\r\n> auto: 超出自动显示滚动条，不超出不显示滚动条\r\n> 一般情况下，我们都不想让溢出的内容显示出来，因为溢出的部分会影响布局。\r\n> 但是如果有定位的盒子， 请慎用overflow:hidden  因为它会隐藏多余的部分\r\n> ```\r\n>\r\n> \r\n\r\n> ![image-20211203023422853](03CSS进阶.assets/image-20211203023422853.png)\r\n>\r\n> **8：精灵图与字体图标**\r\n> \t`精灵图`\r\n>\r\n> ```html\r\n> 为了有效地减少服务器接收和发送请求的次数，提高页面的加载速度\r\n> 将网页中的一些小背景图像整合到一张大图中 ，这样服务器只需要一次请求就可以了。\r\n> ```\r\n>\r\n> ​\t\t`使用精灵图`\r\n>\r\n> ```html\r\n> 精灵技术主要针对于背景图片使用。就是把多个小背景图片整合到一张大图片中。\r\n> \r\n> 这个大图片也称为 sprites  精灵图  或者 雪碧图\r\n> \r\n> 移动背景图片位置， 此时可以使用 background-position 。\r\n> \r\n> 移动的距离就是这个目标图片的 x 和 y 坐标。注意网页中的坐标有所不同\r\n> \r\n> 因为一般情况下都是往上往左移动，所以数值是负值。\r\n> \r\n> 使用精灵图的时候需要精确测量，每个小背景图片的大小和位置。\r\n> ```\r\n>\r\n> `总结`\r\n>\r\n> ```html\r\n> 精灵图主要针对于小的背景图片使用。\r\n> 主要借助于背景位置来实现---background-position 。\r\n> 一般情况下精灵图都是负值。（千万注意网页中的坐标： x轴右边走是正值，左边走是负值， y轴同理。）\r\n> ```\r\n>\r\n> `字体图标`\r\n>\r\n> ```html\r\n> 字体图标 iconfont ： 展示的是图标，本质属于字体\r\n> 轻量级：一个图标字体要比一系列的图像要小\r\n> 灵活性：本质其实是文字，可以很随意的改变颜色、产生阴影、透明效果、旋转等\r\n> 兼容性：几乎支持所有的浏览器，请放心使用\r\n> ```\r\n>\r\n> `字体图标的下载`\r\n>\r\n> ```html\r\n> icomoon 字库 ： http://icomoon.io\r\n> 阿里iconfont字库：http://www.iconfont.cn/ \r\n> ```\r\n>\r\n> `CSS三角形`\r\n>\r\n> ```html\r\n> div {\r\n>   width: 0;\r\n>   height: 0;\r\n>   border: 50px solid transparent;\r\n>   border-color: red green blue black;\r\n>   line-height: 0;\r\n>   font-size: 0;\r\n>  \t}\r\n> ```\r\n>\r\n>\r\n> \r\n\r\n'},9352:function(n,t,r){"use strict";r.r(t),t["default"]='> # **HTML基础**\r\n\r\n![image-20211202092617016](01html基础.assets/image-20211202092617016.png)\r\n\r\n\r\n\r\n> 1：**基础概念**\r\n> \t`网页与网站`\r\n> \t\t网站由网页够成\r\n> \t\t网页内容包括：文字、图片、连接等元素\r\n> \t\t网页是使用 html 超文本标记语言写的\r\n> \t\t文件后缀名是  .html\r\n> \t`浏览器与浏览器内核`\r\n> \t\t常见浏览器：谷歌、火狐、IE、Safari\r\n> \t\t浏览器与对应使用的内核\r\n> \t\t\t图片可放大\r\n> \t`web标准`\r\n> \t\tW3C 万维网联盟\r\n> \t\t标准的够成内容\r\n> \t\t\t结构\r\n> \t\t\t\t结构用于对网页元素进行整理和分类，现阶段主要学的是HTML\r\n> \t\t\t表现\r\n> \t\t\t\t表现用于设置网页元素的版式、颜色、大小等外观样式，主要指的是CSS\r\n> \t\t\t行为\r\n> \t\t\t\t行为是指网页模型的定义及交互的编写，现阶段主要学的是 Javascript\r\n\r\n\r\n\r\n\r\n\r\n![image-20211202092940041](01html基础.assets/image-20211202092940041.png)\r\n\r\n> **2：HTML基本结构**\r\n> \t`语法规范`\r\n> \t\t标签都使用<>包裹\r\n> \t\t大部分成对出现，是双标签，单个出现是但标签\r\n> \t\t标签由父子(包含)关系和兄弟(并列)关系\r\n> \t`基本结构(骨架标签)`\r\n\r\n> ```\r\n> 开发工具\r\n> \t代码编辑器有很多，原则就是自己用的顺手就可以了\r\n> \t推举使用 VS Code\r\n> \tVS Code常用快捷键\r\n> \t\t新建文件（Ctrl+N）\r\n> \t\t保存（Ctr+S），注意移动要保存为htm文件\r\n> \t\tCtrl+加号键，Ctrl+减号键可以放大缩小视图\r\n> \t\t生成页面骨架结构，输入！按下Tab键\r\n> \t\t利用插件在浏览器中预览页面∶单击鼠标右键，在弹出出口中点击" Open In Default Browser\r\n> \t\thttps://zhuanlan.zhihu.com/p/124233987\r\n> 骨架代码\r\n> \t<！ DOCTYPE>标签\r\n> \t\t文档类型声明标签，告诉浏览器这个页面采取html5版本来显示页面\r\n> \tlang语言\r\n> \t\t告诉浏览器或者搜索引这是一个英文网站本页面采取英文来显示\r\n> \tcharset字符集\r\n> \t\t采取UF-8来保存文字。如果不写就会乱码\r\n> 标签语义\r\n> \t根据标签的语义，在合适的地方给一个最为合理的标签，可以让页面结构更清晰。\r\n> ```\r\n>\r\n\r\n\r\n\r\n\r\n\r\n![image-20211202093108911](01html基础.assets/image-20211202093108911.png)\r\n\r\n```html\r\n**3：常用标签**\r\n\th系列-标题标签\r\n\t\th1->h6 逐级递减\r\n\tp标签，段落标签\r\n\t\t浏览器会自动适用换行\r\n\t换行标签<br />\r\n\t\t强制换行\r\n\t\t单标签\r\n\t文本格式化\r\n\t\t加粗\r\n\t\t\tstrong</ strong-或者<b></b>\r\n\t\t倾斜\r\n\t\t\t<em></em>或者<i><i/>\r\n\t\t删除线\r\n\t\t\t<del><del/>或者<s></s>\r\n\t\t下划线\r\n\t\t\t<ins></ins>或者<u></u>\r\n\t无语义标签\r\n\t\tdiv\r\n\t\tspan\r\n\t**图片标签  <img />**\r\n\t\t`属性`\r\n\t\t\tsrc: 图片的路径（来源）\r\n\t\t\talt：当图片加载错误时显示的文字\r\n\t\t\ttitle:当鼠标悬停在图片上显示的文字\r\n\t\t\twidth:图片的宽度\r\n\t\t\theight：图片的高度\r\n\t\t\tborder:图片的边框\r\n\t\t`属性的特点`\r\n\t\t\t1.属性之间部分先后顺序\r\n\t\t\t2.属性名与属性值之间以键值对的形式存在\r\n\t\t\t3.属性名与属性值之间以等号分隔   属性值要以引号包裹；\r\n\t`路径和连接`\r\n\t\t*路径*\r\n\t\t\t*[相对路径*]()\r\n\t\t\t\t在同一个文件夹直接找名字\r\n\t\t\t\t向上一级  ../\r\n\t\t\t\t向下 /\r\n\t\t\t[绝对路径]()\r\n\t\t`链接标签`  <a ></a>\r\n\t\t\t外部链接  <a href="http://www.qq.com"></a>  写完整的 协议  域名   网址\r\n\t\t\t内部链接 <a href="index.html"></a>   直接写文件名即可\r\n\t\t\t`属性`\r\n\t\t\t\thref:指定跳转的页面\r\n\t\t\t\ttitle：鼠标悬停显示的文字\r\n\t\t\t\ttarget:  _self(默认会覆盖原来的窗口)   _blank(会以新的窗口打开)    窗口的打开方式\r\n\t\t\t\t#：会阻止页面跳转但是会刷新页面\r\n\t\t`锚点`\r\n\t\t\t链接使用#\r\n\t\t\t目标标签id值与连接#号后面一致\r\n\t`注释与特殊字符`\r\n\t\t\x3c!--我是注释--\x3e\r\n\t\t\t编辑器使用Ctrl+/ 快捷键\r\n```\r\n\r\n​\t\t![image-20211202104216298](01html基础.assets/image-20211202104216298.png)\r\n\r\n\r\n\r\n<img src="01html基础.assets/image-20211202093253320.png" alt="image-20211202093253320"  />\r\n\r\n\r\n\r\n> **4.表格**\r\n> \t`标签`\r\n>\r\n> \t\t<table></table> 表格\r\n> ​\t\t<tr></tr> 行\r\n> ​\t\t<td></td> 单元格\r\n> ​\t\t<th></th> 表头    加粗  加黑 自动居中\r\n> ​\t\t<caption></caption>  表格的标题   写在内部  显示外部  居中\r\n> ​\t\t<thead></thead>  结构头\r\n> ​\t\t<tbody></tbody>  结构体\r\n> ​\t\t<tfoot></tfoot> 结构底\r\n> ​\t`属性`\r\n> ​\t\tborder:表格的边框   默认的0\r\n> ​\t\twidth：宽度\r\n> ​\t\theight：高度\r\n> ​\t\tcellspacing:单元格与单元格之间的距离\r\n> ​\t\tcellspadding：单元格与内容之间的距离\r\n> ​\t\talign: left/center/right\r\n> ​\t\t\t注意： 当给表格设置居中整个表格会居中（文字不会居中）    当指定tr  或者td  文字居中\r\n> ​\t\tcolspan:列合并     \r\n> ​\t\trowspan：行合并     \r\n\r\n\r\n\r\n![image-20211202093523427](01html基础.assets/image-20211202093523427.png)\r\n\r\n\r\n\r\n````html\r\n**5:列表**\r\n\t`无序列表`\r\n\r\n```\r\n\t<ul><li></li></ul>\r\n```\r\n\r\n​\t`有序列表`\r\n​\t\t<ol><li></li></ol>\r\n​\t`自定义列表`\r\n\r\n<dl><dt></dt><dd></dd></dl>\r\n\r\n**6:表单**\r\n\t`input属性`\r\n\t\t1.text：文本框\r\n\t\t2.password：密码框\r\n\t\t3.radio：单选按钮\r\n\t\t4.checkbox：复选框\r\n\t\t5.button：普通按钮\r\n\t\t6.reset：重置按钮  需要配合form表单才有作用\r\n\t\t7.submit：提交按钮\r\n\t\t8.image   属性  src\r\n\t\t9.file 文件按钮   上传图片\r\n\t`name属性`\r\n\t\t1.发送后台......\r\n\t\t2.name的标识 对于单选按钮  只能选择一个\r\n\t`value：`文本框默认显示的文字\r\n\t`checked：默认选中` \r\n\t\t可以写一个属性   也可以 属性名=属性值\r\n\t`label用法`\r\n\t\t1.<label>请输入 <input type="text"> <input type="text"></label>\r\n\t\t2.<label for="a">请输入</label>\r\n\t<input type="text" id="a">\r\n\t`文本域：`textarea：用户留言\r\n\t`下拉列表`\r\n\r\n```\r\n\t<select>\r\n\t<option>请选择</option>\r\n\t<option >苹果</option>\r\n\t<option selected>香蕉</option>\r\n\t<option>橘子</option>\r\n```\r\n\r\n</select>\r\n​\t`下拉列表的默认选中：` selected\r\n​\t`form表单`\r\n​\t\t主要的作用：是收集用户信息   发送后台\r\n​\t\taction：  提交后台的地址\r\n​\t\tmethod="get/post"   提交（传输）后台的方式\r\n​\t\tname =“a” 告诉服务器  由哪个表单提交过来的\r\n````\r\n\r\n'},c174:function(n,t,r){var e={"./01html基础.md":"9352","./02CSS基础.md":"d3bf","./03CSS进阶.md":"7cb7","./04HTML5-CSS基础.md":"c1e5"};function i(n){var t=o(n);return r(t)}function o(n){if(!r.o(e,n)){var t=new Error("Cannot find module '"+n+"'");throw t.code="MODULE_NOT_FOUND",t}return e[n]}i.keys=function(){return Object.keys(e)},i.resolve=o,n.exports=i,i.id="c174"},c1e5:function(n,t,r){"use strict";r.r(t),t["default"]='> # HTML5+CSS基础\r\n>\r\n\r\n\r\n\r\n\r\n\r\n> \r\n>\r\n> ![image-20211203025331139](04HTML5-CSS基础.assets/image-20211203025331139.png)\r\n>\r\n> **1：HTML5**\r\n> \t`HTML新增语义标签`\r\n>\r\n> ```html\r\n> <header> 头部标签\r\n> <nav>导航标签\r\n> <article>内容标签\r\n> <section>定义文档某个区域\r\n> <aside>侧边栏标签\r\n> <footer>尾部标签\r\n> 标签有语义，有利于浏览器的搜索引擎搜索\r\n> ```\r\n>\r\n> \r\n>\r\n> `媒体标签`\r\n> \t`视频标签 video`\r\n>\r\n> ```html\r\n> \t<video  controls="controls"  width="300">\r\n> \t<source src="move.ogg" type="video/ogg" >\r\n> <source src="move.mp4" type="video/mp4" >\r\n> 您的浏览器暂不支持 <video> 标签播放视频\r\n>   </ video >\r\n> autoplay  自动播放\r\n> \r\n>  - 注意： 在google浏览器上面，默认禁止了自动播放，如果想要自动播放的效果，需要设置 muted属性\r\n>    width  宽度\r\n>    height  高度\r\n>    loop  循环播放\r\n>    src  播放源\r\n>    muted  静音播放\r\n> \r\n> \r\n> \r\n> \t\r\n> ```\r\n> \r\n>\r\n>    `音频标签- audio`\r\n>\r\n> ```html\r\n> < audio controls="controls"  >\r\n>     <source src="happy.mp3" type="audio/mpeg" >\r\n>     <source src="happy.ogg" type="audio/ogg" >\r\n>     您的浏览器暂不支持 <audio> 标签。\r\n> </ audio>\r\n> \t\tautoplay 果出现该属性，则音频在就绪后马上搔放。\r\n> \t\tcontrols 如果出现该属性，则向用户显示控件，比如播放按钮，\r\n> \t\tloop 如果出现该属性，则每当音频结束时重新开始播放。\r\n> \t\tsrc 要播放的音频的URL.\r\n> ```\r\n>\r\n> `新增的表单输入类型`\r\n>\r\n> ![image-20211203031201494](04HTML5-CSS基础.assets/image-20211203031201494.png)\r\n>\r\n> \r\n>\r\n> `新增表单属性`\r\n>\r\n> ```html\r\n> required  表单拥有该属性表示其内容不能为空，必填\r\n> \tplaceholder 提示文本  表单的提示信息，存在默认值将不显示\r\n> \tautofocus 自动聚焦属性，页面加载完成自动聚焦到指定表单\r\n> \t`autocomplete  off /on  当用户在字段开始键入时，浏览器基于之前键入过的值，应该显示出在字段中填写的选项`\r\n> \t\t默认已经打开，如 autocomplete="on“，关闭 autocomplete="off"\r\n> \t\t需要放在表单内，同时加上name属性，同时成功提交\r\n> \tmultiple 可以多选文件提交\r\n> ```\r\n>\r\n> \r\n\r\n\r\n\r\n\r\n\r\n​\t\r\n\r\n​\t\t\r\n\r\n> ![image-20211203032152540](04HTML5-CSS基础.assets/image-20211203032152540.png)\r\n>\r\n> **2：CSS3**\r\n>\r\n> `属性选择器`\r\n> \t\t\r\n>\r\n> ```html\r\n> E[ata]   选择具有att属性的E元素\r\n> \t\tE[att="val"]  选择具有 att 属性且属性值等于 val 的 E 元素\r\n> \t\t\t /* 只选择 type =text 文本框的input 选取出来 */1111111111111\r\n> input[type=text] {\r\n>     color: pink;\r\n> }\r\n> \t\tE[att^="val"]  匹配具有 att 属性且值以 val 开头的 E 元素\r\n> \t\t\t/* 选择首先是div 然后 具有class属性 并且属性值 必须是 icon开头的这些元素 */\r\n> div[class^=icon] {\r\n>     color: red;\r\n> }\r\n> \t\tE[att$="val"]  匹配具有 att 属性目值以 val 结尾的 E 元素\r\n> \t\t\t/* 选择首先是section 然后 具有class属性 并且属性值 必须是 data结尾的这些元素 */\r\n> section[class$=data] {\r\n>     color: blue;\r\n> }\r\n> \t\tE[att*="val"]  匹配具有 att 属性且值中含有 val 的 E 元素\r\n> ```\r\n>\r\n> `结构伪类选择器`\r\n>\r\n> ![image-20211203032518679](04HTML5-CSS基础.assets/image-20211203032518679.png)\r\n>\r\n> \r\n>\r\n> `E:first-child`\r\n>\r\n>\r\n> ```html\r\n> 匹配父元素的第一个子元素E\r\n> ul li:first-child{\r\n>  background-color: red;\r\n> }\r\n> <ul>\r\n>     <li>列表项一</li>\r\n>     <li>列表项二</li>\r\n>     <li>列表项三</li>\r\n>     <li>列表项四</li>\r\n>   </ul>\r\n> \r\n> ```\r\n>\r\n> ​\t`E:nth-child(n)`\r\n>\r\n> ```\r\n> ul li:nth-child(2){} 匹配到父元素的第2个子元素 \r\n> ul li:nth-child(odd){}  匹配到父元素的序号为奇数的子元素\r\n> ul li:nth-child(-n+3){} 匹配到父元素的前3个子元素\r\n> ```\r\n>\r\n> \r\n>\r\n> **伪元素选择器**\r\n>\r\n> ```\r\n> ::before  在元素内部的前面插入内容\r\n> \t::after  在元素内部的后面插入内容\r\n> \r\n> \t<style>\r\n> \r\n> </style>\r\n> <body>\r\n> \r\n>     <div>\r\n>         是\r\n>     </div>\r\n> \r\n> </body>\r\n> ```\r\n>\r\n> ​\t`**盒子模型**`\r\n>\r\n> ```\r\n> box-sizing: content-box  盒子大小为 width + padding + border  （以前默认的）\r\n> box-sizing: border-box  盒子大小为 width\r\n> 如果盒子模型我们改为了box-sizing: border-box  ， 那padding和border就不会撑大盒子了（前提padding和border不会超过width宽度）\r\n> margin: 0;\r\n> padding: 0\r\n> /* 初始化样式设置 */\r\n> box-sizing: border-box\r\n> ```\r\n>\r\n> `CSS3新增其他特性`\r\n>\r\n> ```\r\n> CSS3滤镜filter\r\n> \t\tfilter CSS属性将模糊或颜色偏移等图形效果应用于元素\r\n> \t\tfilter:   函数(); --\x3e  例如： filter: blur(5px);  --\x3e  blur模糊处理  数值越大越模糊\r\n> ```\r\n>\r\n> `calc 函数`\r\n>\r\n> ```\r\n> calc() 此CSS函数让你在声明CSS属性值时执行一些计算\r\n> ```\r\n>\r\n> `CSS3 过渡`\r\n>\r\n> ```\r\n> 过渡动画： 是从一个状态 渐渐的过渡到另外一个状态\r\n> transition: 要过渡的属性  花费时间  运动曲线  何时开始;\r\n> 1：属性 ： 想要变化的 css 属性， 宽度高度 背景颜色 内外边距都可以 。如果想要所有的属性都变化过渡， 写一个all 就可以\r\n> 2：花费时间： 单位是 秒（必须写单位） 比如 0.5s \r\n> 3：运动曲线： 默认是 ease （可以省略）\r\n> 4：何时开始：单位是 秒（必须写单位）可以设置延迟触发时间  默认是 0s  （可以省略）\r\n> ```\r\n>\r\n> \r\n\r\n'},d3bf:function(n,t,r){"use strict";r.r(t),t["default"]='\r\n\r\n\r\n\r\n> # **CSS基础**\r\n>\r\n\r\n> \r\n>\r\n> ![image-20211202111938646](02CSS基础.assets/image-20211202111938646.png)\r\n\r\n\r\n\r\n> \r\n>\r\n> \r\n>\r\n> **1：CSS简介**\r\n> \t作用：页面的化妆师美容师\r\n> \t基本语法规则\r\n> \t\t![image-20211202112248351](02CSS基础.assets/image-20211202112248351.png)\r\n\r\n```html\r\n写法风格\r\n\t紧凑型\r\n\t展开型(推举)\r\n```\r\n\r\n![image-20211202112913895](02CSS基础.assets/image-20211202112913895.png)\r\n\r\n\r\n\r\n```html\r\n2：选择器**\r\n\t`1.标签选择器`\r\n\t\t标签{属性：属性值}\r\n\t`2.class（类选择器）`\r\n\t\thtml：<div class="名字"></div>   css：  .名字{属性：属性值}\r\n\t`3.多类名选择器：`  \r\n\t\t1.减少代码量\r\n\t\t2.方便代码的后期维护\r\n\t\t3.多类名 与css的先后顺序有关系    与html结构里面的class类名顺序没有关系\r\n\t\t4.多类名的添加  以空格的形式\r\n\t`4：id选择器`\r\n\t\thtml：<div id="名字"></div>   css：  #名字{属性：属性值}\r\n\t\tid与class选择器的区别：  id的名字是唯一的（体现在js里面） class名字可以任意多个\r\n\t`5：*通配符`    选择所有的  一般测试使用\r\n\r\n\r\n```\r\n\r\n\r\n\r\n> ![image-20211202113124655](02CSS基础.assets/image-20211202113124655.png)\r\n>\r\n> \r\n>\r\n> **3：字体与文本**\r\n> \t`字体类型  font-family`\r\n> \t\t 宋体  微软雅黑  黑体\r\n> \t`字体大小 font-size`  \r\n> \t\t大小单位px  默认的是16px \r\n> \t`字体粗细 font-weigth`\r\n> \t\t记住加粗是700或者bold不加粗是 norma或者400记住数字不要跟单位\r\n> \t`字体样式 font-style`\r\n> \t\t倾斜是 italic不倾斜是 normal工作中我们最常用 norma\r\n> \t`字体复合写法(连写)`\r\n> \t\tfont:font-style font-weight font-size/line-height font-family\r\n> \t\t1.字体连写是有顺序的不能随意换位置；2.其中字号和字体必须同时出现\r\n> \t`字体颜色 color`\r\n> \t\t预定义的颜色值\r\n> \t\t\tred, green, blue\r\n> \t\t十六进制\r\n> \t\t\t#FF0000,#FF6600\r\n> \t\tRGB代码\r\n> \t\t\trgb(255,0,0)或rgb(100%,60%,10%)\r\n> \t`文本对齐 text-align`\r\n> \t\t注意：1.div  h。。标题会居中   span   em  i 。不会居中\r\n> \t\tleft/center/right  水平对齐方式\r\n> \t`文本装饰 text-decoration`\r\n> \t\tnone 默认。没有装饰线（最常用）\r\n> \t\tunderline 下划线。链接a自带下划线（常用）\r\n> \t\toverline  上划线。（几乎不用）\r\n> \t\tline-through  删除线。（不常用）\r\n> \t`首行缩进 text-indent`\r\n> \t\t单位 em   1em=16px\r\n> \t`行高 行间距  line-height`\r\n> \t\t1.注意： 当采用字体连写   不写行高默认是0  会把上面的行高覆盖font:font-style font-weight font-size/line-height font-family  \r\n\r\n> \r\n>\r\n> ![image-20211202114312375](02CSS基础.assets/image-20211202114312375.png)\r\n>\r\n> > ```html\r\n> > **4：CSS引入方式**\r\n> > \t`内部样式`\r\n> > \t\t放在style标签中\r\n> > \t\t选择器{属性:属性值;属性：属性值}\r\n> > \t`行内样式`\r\n> > \t\t<标签 style="属性:属性值；属性:属性值"></标签>\r\n> > \t\t只能控制当前标签\r\n> > \t`外部样式`\r\n> > \t\t通过link引入外部css文件  <link  rel="stylesheet"   href="外部css文件"  />\r\n> > \t`三种样式比较`\r\n> > \t\t优先级比较\r\n> > \t\t\t三种方式修改一个标签（内容）  优先级最大的是行内   内部样式与外部样式 优先级是相同的   谁在下面结果就是谁\r\n> > ```\r\n> >\r\n> > \r\n\r\n\t\t外部的css用的多\r\n\t\t\t 1.实现结构与样式的分离   2.实现模块化 实现公用  3.减少不必要的代码。\r\n\r\n> ![image-20211202121350440](02CSS基础.assets/image-20211202121350440.png)\r\n>\r\n> **5：emmet语法及代码格式化**\r\n> \t`快速生成HTML和CSS结构`\r\n> \t`快速生成HTML结构语法`\r\n> \t\t生成标签 直接输入标签名 按tab键即可   比如  div   然后tab 键， 就可以生成 <div></div>\r\n> \t\t如果想要生成多个相同标签  加上 * 就可以了 比如   div*3  就可以快速生成3个div\r\n> \t\t如果有父子级关系的标签，可以用 >  比如   ul > li就可以了\r\n> \t\t如果有兄弟关系的标签，用  +  就可以了 比如 div+p  \r\n> \t\t如果生成带有类名或者id名字的，  直接写  .demo  或者  #two   tab 键就可以了\r\n> \t\t如果生成的div 类名是有顺序的， 可以用 自增符号  $ \r\n> \t\t如果想要在生成的标签内部写内容可以用  { }  表示\r\n> \t`快速生成CSS样式语法`\r\n> \t\tCSS 基本采取简写形式即可\r\n> \t\t比如 w200   按tab  可以 生成  width: 200px;\r\n> \t\t比如 lh26px   按tab  可以生成  line-height: 26px;\r\n> \t`格式化代码`\r\n> \t\t鼠标右键\r\n> \t\tshift+alt+f  快捷键\r\n> \t\t 保存页面的时候自动格式化代码\r\n> \t\t\t1）文件 ------.>【首选项】----------\x3e【设置】；\r\n> \t\t\t2）搜索emmet.include;\r\n> \t\t\t3）在settings.json下的【工作区设置】中添加以下语句：\r\n> \t\t\t"editor.formatOnType": true,\r\n> \t\t\t"editor.formatOnSave": true\r\n\r\n> \r\n>\r\n> ![image-20211202123345799](02CSS基础.assets/image-20211202123345799.png)\r\n>\r\n> **6：复合选择器**\r\n> \t`后代选择器`\r\n> \t\t后代选择器又称为包含选择器，可以选择父元素里面子元素\r\n> \t\t元素1  元素2 {样式声明}\r\n> \t\t元素2 可以是儿子，也可以是孙子等，只要是元素1 的后代即可\r\n> \t\t元素1 和 元素2 可以是任意基础选择器\r\n> \t`子选择器`\r\n> \t\t子元素选择器（子选择器）只能选择作为某元素的最近一级子元素。\t\t（简单理解就是选亲儿子元素）\r\n> \t\t元素1 > 元素2 {样式声明}\r\n> \t\t元素1 和 元素2 中间用 大于号 隔开\r\n> \t\t元素1 是父级，元素2 是子级，最终选择的是元素2\r\n> \t\t元素2 必须是亲儿子，其孙子、重孙之类都不归他管. 你也可以叫他 亲儿子选择器\r\n> \t`并集选择器`\r\n> \t\t并集选择器可以选择多组标签, 同时为他们定义相同的样式，通常用于集体声明\r\n> \t\t元素1，元素2{样式声明}\r\n> \t\t元素1 和 元素2 中间用逗号隔开\r\n> \t\t逗号可以理解为和的意思\r\n> \t\t并集选择器通常用于集体声明\r\n> \t`伪类选择器`\r\n> \t\t伪类选择器用于向某些选择器添加特殊的效果\r\n> \t\t伪类选择器书写最大的特点是用冒号（:）表示\r\n> \t\t`链接伪类选择器`\r\n> \t\t\ta:link\t没有点击过的(访问过的)链接\r\n> \t\t\ta:visited\t点击过的(访问过的)链接\r\n> \t\t\ta:hover\t鼠标经过的那个链接\r\n> \t\t\ta:active\t鼠标正在按下还没有弹起鼠标的那个链接\r\n> \t\t\t实际开发中 先定义所有a标签颜色，然后再使用伪类具体定义\r\n> \t\t\t\t\r\n\r\n```html\r\n\t\t为了确保生效，请按照 LVHA 的循顺序声明 :link－:visited－:hover－:active。\r\n\t:focus 伪类选择器\r\n\t\t:focus 伪类选择器用于选取获得焦点的表单元素\r\n\t\t焦点就是光标，一般情况 <input> 类表单元素才能获取\r\n```\r\n\r\n> \r\n>\r\n> ![image-20211202123938082](02CSS基础.assets/image-20211202123938082.png)\r\n>\r\n> \r\n>\r\n> **7：元素显示模式**\r\n> \t`元素（标签）以什么方式进行显示`\r\n> \t`块元素`\r\n>\r\n> ```html\r\n> \t<h1>~<h6>、<p>、<div>、<ul>、<ol>、<li>\r\n> \t自己独占一行。\r\n> \t高度，宽度、外边距以及内边距都可以控制\r\n> \t宽度默认是容器（父级宽度）的100%\r\n> \t是一个容器及盒子，里面可以放行内或者块级元素。\r\n> \t文字类的元素内不能放块级元素\r\n> 行内元素\r\n> \t<a>、<strong>、<b>、<em>、<i>、<del>、<s>、<ins>、<u>、<span>\r\n> \t相邻行内元素在一行上，一行可以显示多个。\r\n> \t高、宽直接设置是无效的。\r\n> \t默认宽度就是它本身内容的宽度\r\n> \t行内元素只能容纳文本或其他行内元素。\r\n> \t链接里面不能再放链接\r\n> \t特殊情况链接 <a> 里面可以放块级元素，但是给 <a> 转换一下块级模式最安全\r\n> 行内块元素\r\n> \t<img />、<input />、<td>\r\n> \t和相邻行内元素（行内块）在一行上，但是他们之间会有空白缝隙。\r\n> \t一行可以显示多个（行内元素特点）\r\n> \t默认宽度就是它本身内容的宽度（行内元素特点）\r\n> \t高度，行高、外边距以及内边距都可以控制（块级元素特点）\r\n> 显示模式的转换\r\n> \t一个模式的元素需要另外一种模式的特性\r\n> \t转换为块元素：display:block;\r\n> \t转换为行内元素：display:inline;\r\n> \t转换为行内块：display: inline-block;\r\n> 文字居中\r\n> \t行高和盒子高度一致即可\r\n> \t行高的上空隙和下空隙把文字挤到中间了，如果行高小于盒子高度,文字会偏上，如果行高大于盒子高度,则文字偏下。\r\n> ```\r\n>\r\n> \r\n\r\n\r\n\r\n> ![image-20211202124511208](02CSS基础.assets/image-20211202124511208.png)\r\n>\r\n> **8：CSS的背景**\r\n> \t`背景颜色 background-color`\r\n> \t\tbackground-color：颜色值；\r\n> \t\t透明色：background-color: transparent\r\n> \t`背景图片 background-image`\r\n> \t\tbackground-image :  none（默认无图） |  url(url) （图片路径地址）\r\n> \t\t实际开发常见于 logo 或者一些装饰性的小图片或者是超大的背景图片, 优点是非常便于控制位置\r\n> \t`背景平铺  background-repeat`\r\n> \t\tbackground-repeat: repeat(默认横纵平铺) | no-repeat(不平铺) | repeat-x(横向平铺) | repeat-y(纵向平铺)\r\n> \t背景图片位置  background-position\r\n> \t\tbackground-position: x横向值  y纵向值\r\n> \t\t`x和y的值`\r\n> \t\t\t百分数 | 由浮点数字和单位标识符组成的长度值\r\n> \t\t\ttop | center | bottom | left | center | right 方位名词\r\n> \t`背景图片固定  background-attachment`\r\n> \t\tbackground-attachment ： scroll | fixed\r\n> \t\tscroll：背景图像是随对象内容滚动\r\n> \t\tfixed : 背景图像固定\r\n> \t`背景样式合写`\r\n> \t\tbackground: 背景颜色 背景图片地址 背景平铺 背景图像滚动 背景图片位置;\r\n> \t`背景色半透明`\r\n> \t\tbackground: rgba(0,0,0,0.3)\r\n> \t\t最后一个参数是 alpha 透明度，取值范围在 0~1之间\r\n> \t\t我们习惯把 0.3 的 0 省略掉，写为 background: rgba(0, 0, 0, .3);\r\n> \t\t背景半透明是指盒子背景半透明，盒子里面的内容不受影响\r\n\r\n'}}]);