(window["webpackJsonp"]=window["webpackJsonp"]||[]).push([[4],{"1b62":function(t,n,r){"use strict";r.d(n,"b",(function(){return a})),r.d(n,"a",(function(){return h}));var e=r("448a"),i=r.n(e),o=(r("4de4"),r("d3b7"),r("ded3")),l=r.n(o),s=r("2f62"),a={data:function(){return{tab:"",tab_level:1,is_active:!1}},computed:l()({},Object(s["c"])(["get_current_selected_right_menu"])),created:function(){this.is_active=!0,this.fix_right_menu_config()},watch:{tab:function(){this.tab||this.fix_right_menu_config()},get_current_selected_right_menu:function(t,n){this.tab=this.get_current_selected_right_menu["t"+this.tab_level]}},methods:l()(l()({},Object(s["b"])(["set_right_menu_fix_config"])),{},{fix_right_menu_config:function(){this.set_right_menu_fix_config({tl:this.tab_level,tabs:this.tabs||[],tv:this.tab||this.tabs[0]["value"]})}}),beforeDestroy:function(){this.is_active=!1}},c=(r("d81d"),r("99af"),r("a434"),r("07ac"),r("fb6a"),function(){var t=this,n=t.$createElement,r=t._self._c||n;return r("div",{staticClass:"q-my-md q-mx-sm"},[r("div",{staticClass:"q-mb-md row q-gutter-x-md q-gutter-y-sm"},[r("q-select",{staticStyle:{width:"300px"},attrs:{dense:"",filled:"","use-input":"","hide-selected":"","fill-input":"","input-debounce":"0",options:t.topic_options_filtered},on:{filter:t.filterFn,"filter-abort":t.abortFilterFn,input:t.handle_topic_change},scopedSlots:t._u([{key:"before",fn:function(){return[t._v("\n        主题\n      ")]},proxy:!0}]),model:{value:t.topic,callback:function(n){t.topic=n},expression:"topic"}}),r("q-select",{staticStyle:{width:"300px"},attrs:{dense:"",filled:"",options:t.column_options},on:{input:t.handle_column_change},scopedSlots:t._u([{key:"before",fn:function(){return[t._v("\n        列数\n      ")]},proxy:!0}]),model:{value:t.column,callback:function(n){t.column=n},expression:"column"}})],1),r("q-markup-table",{attrs:{dense:""}},[r("thead",[r("tr",[r("th",{staticClass:"text-left text-weight-bolder  ",attrs:{colspan:t.column}},[t._v("\n          "+t._s(t.table_title?t.table_title+"------":"")+"当前词条数量："+t._s(t.word_total)+"\n        ")])])]),r("tbody",[t._l(t.table_data,(function(n,e){return[t.compute_if_show(n)?r("tr",{key:e,class:t.compute_topic_options_style(n)},t._l(t.column,(function(e){return r("td",{key:e,staticClass:"text-left"},[t._v("\n            "+t._s(n[e-1])+"\n          ")])})),0):t._e()]}))],2)])],1)}),m=[],p=(r("a9e3"),r("caad"),r("2532"),{data:function(){return{topic:"全部",column:2,topic_options_filtered:[],topic_options_all:[]}},props:{table_title:{type:String,default:""},word_total:{type:Number,default:0},topic_options:{type:Array,default:function(){return[]}},column_options:{type:Array,default:function(){return[]}},table_data:{type:Array,default:function(){return[]}},show_empty_line:!1},watch:{topic_options:function(t,n){this.init_topic_options_related()},column_options:function(t,n){this.init_column()}},created:function(){this.init_topic_options_related(),this.init_column(),this.handle_column_change(),this.handle_topic_change()},methods:{init_topic_options_related:function(){this.topic_options_all=i()(this.topic_options),this.topic_options_filtered=i()(this.topic_options)},filterFn:function(t,n,r){var e=this;console.log("this.topic_options_all",this.topic_options_all),setTimeout((function(){n((function(){if(""===t)e.topic_options_filtered=i()(e.topic_options_all);else{var n=t.toLowerCase();e.topic_options_filtered=e.topic_options_all.filter((function(t){return t.toLowerCase().indexOf(n)>-1}))}e.$forceUpdate()}),(function(n){""!==t&&n.options.length>0&&(n.setOptionIndex(-1),n.moveOptionSelection(1,!0))}))}),300)},abortFilterFn:function(){},handle_column_change:function(){this.$emit("handle_column_change",this.column)},handle_topic_change:function(){this.$emit("handle_topic_change",this.topic)},init_column:function(){var t=this.$q.platform.is.desktop,n=window.innerWidth;n=t?n-200:n-100,n=n<370?370:n,console.log("ww",n);var r=Math.ceil(n/350);r=r<1?1:r,n<400&&(r=1),r=r>8?8:r,this.column=r},compute_topic_options_style:function(t){var n="",r=1==t.length&&this.topic_options.includes(t[0]);return n=r?"bg-teal-4":"",n},compute_if_show:function(t){if(this.show_empty_line)return!0;var n=t.filter((function(t){return t}));return n.length>0}}}),u=p,d=r("2877"),f=Object(d["a"])(u,c,m,!1,null,"352286d7",null),h=(f.exports,r("ac1f"),r("1276"),r("7db0"),{data:function(){return{relative_path:"",tab:"",tabs:[],MainComponent:"",img_prefix:"./img/linux/heima-Linux云计算/讲义/"}},methods:{extendMarkdown:function(t){var n=this;console.log(t.renderer.rules);var r=t.renderer.rules.html_block;t.renderer.rules.html_block=function(t,e,i,o,l){console.log(" md.renderer.rules.html_block----------------");var s=t[e];if(console.log("1"),s.content.includes("<img")){console.log("token-- ",s);var a="";a=s.content;var c=a.split('src="'),m="",p=c[1];c[0],n.img_prefix,c[1],m=p.includes("http")?c[0]+' src="'+p:c[0]+' src="'+n.img_prefix+p,s.content=m}return s.attrSet("class","q-markdown--token  "),r(t,e,i,o,l)},t.renderer.rules.image=function(t,r,e,i,o){console.log("md.renderer.rules.image---tokens--- ",t);var l=t[r];console.log("3"),l.attrSet("class","q-markdown--image"),console.log("token--- "+r+"-----",l);var s=l.attrGet("src");return console.log(s),s.includes("http")?l.attrSet("src",s):l.attrSet("src",n.img_prefix+s),o.renderToken(t,r,e)}},compute_img_prefix:function(){var t=this;if(this.MainComponent){var n=this.tabs.find((function(n){return n["value"]==t.tab}));if(n&&n["modules_obj"]){var r=this.relative_path;this.img_prefix="."+r+(n["modules_obj"]["relative_folder"]||"")}else this.img_prefix="."+relative_path}console.log(" this.img_prefix ---",this.img_prefix)}}})},3686:function(t,n,r){"use strict";r.d(n,"a",(function(){return a}));var e=r("ded3"),i=r.n(e),o=(r("d81d"),r("ac1f"),r("1276"),r("a15b"),r("e260"),r("d3b7"),r("ddb0"),r("fb6a"),r("4e82"),r("6821")),l=(r("d958"),function(t){if(!t)return"";var n="",r=t.split("/");return r.shift(),r.pop(),n=r.join("/"),n?"/"+n+"/":""}),s=function(t){t=t||"";var n=t.split("/"),r=n.length;return n[r-1]},a=function(t){var n=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"md",r=arguments.length>3&&void 0!==arguments[3]&&arguments[3],e=!(arguments.length>4&&void 0!==arguments[4])||arguments[4];console.log("当前 require.context---",t),console.log("当前 field_components.keys()---",t.keys());var a=t.keys(),c={},m=[],p={},u=[];return a.map((function(e){var i=e.slice(2,e.length-n.length-1),s="module_"+o(e);u.push(i),p[i]={value:s,relative_path:e,relative_folder:l(e)},console.log("x---",e),c[s]=r?"\n            <div>\n            <code>\n              ".concat(t(e).default,"\n            </code>\n            </div>\n            "):t(e).default})),u.sort((function(t,n){return parseFloat(t)-parseFloat(n)})),u.map((function(t){m.push({label:e?s(t):t,value:p[t]["value"],modules_obj:i()({},p[t])})})),console.log("all_components------------",c),console.log("all_modules---------------",m),{all_components:c,all_modules:m}}},"75ab":function(t,n,r){var e={"./06-移动端开发及Flex伸缩布局.md":"a100","./07-移动Web开发.md":"dac4"};function i(t){var n=o(t);return r(n)}function o(t){if(!r.o(e,t)){var n=new Error("Cannot find module '"+t+"'");throw n.code="MODULE_NOT_FOUND",n}return e[t]}i.keys=function(){return Object.keys(e)},i.resolve=o,t.exports=i,i.id="75ab"},"7b7b":function(t,n,r){"use strict";r.r(n);var e=function(){var t=this,n=t.$createElement,r=t._self._c||n;return r("div",[r("q-markdown",{attrs:{extend:t.extendMarkdown,src:t.MainComponent}})],1)},i=[],o=r("3686"),l=r("1b62"),s="/books/web/md/",a=Object(o["a"])(r("75ab"),"md",!0),c=a.all_components,m=a.all_modules,p={mixins:[l["b"],l["a"]],data:function(){return{relative_path:s,img_prefix:"."+s,tab:m[0].value,tab_level:1,MainComponent:c[m[0].value],tabs:m}},watch:{tab:function(t,n){this.MainComponent=c[this.tab],this.compute_img_prefix()}}},u=p,d=r("2877"),f=Object(d["a"])(u,e,i,!1,null,"c4476568",null);n["default"]=f.exports},a100:function(t,n,r){"use strict";r.r(n),n["default"]='\r\n\r\n> # FLex伸缩布局\r\n>\r\n\r\n> \r\n>\r\n> ![image-20211203234630921](06-移动端开发及Flex伸缩布局.assets/image-20211203234630921.png)\r\n>\r\n> **1：移动端基础知识**\r\n> \t`浏览器`\r\n>\r\n> ```html\r\n>  PC端浏览器：\r\n> 360浏览器、谷歌浏览器、火狐浏览器、QQ浏览器、百度浏览器、搜狗浏览器、IE浏览器。\r\n> 移动端浏览器：\r\n> UC浏览器，QQ浏览器，欧朋浏览器，百度手机浏览器，360安全浏览器，谷歌浏览器，搜狗手机浏览器，猎豹浏览器，以及其他杂牌浏览器。\r\n> 国内的UC和QQ，百度等手机浏览器都是根据Webkit修改过来的内核，国内尚无自主研发的内核\r\n> 兼容移动端主流浏览器，处理Webkit内核浏览器即可\r\n> \r\n> \r\n> ```\r\n>\r\n> ​\t`手机屏幕`\r\n>\r\n> ```html\r\n> 屏幕尺寸非常多，碎片化严重\r\n> 480x800, 480x854, 540x960, 720x1280，1080x1920、2K，4k屏。\r\n> iPhone设备的主要分辨率有：640x960, 640x1136, 750x1334, 1242x2208等。\r\n> ```\r\n>\r\n> ​\t\t`移动端调试方法`\r\n>\r\n> ```html\r\n> Chrome DevTools（谷歌浏览器）的模拟手机调试\r\n> 搭建本地web服务器，手机和服务器一个局域网内，通过手机访问服务器\r\n> 使用外网服务器，直接IP或域名访问\r\n> ```\r\n\r\n\r\n\r\n\r\n\r\n> ![image-20211204000340661](06-移动端开发及Flex伸缩布局.assets/image-20211204000340661.png)\r\n>\r\n> **2：视口**\r\n> \t`视口（viewport）就是浏览器显示页面内容的屏幕区域；分为布局视口、视觉视口和理想视口`\r\n> \t\t`布局视口 layout viewport`\r\n>\r\n> ```html\r\n> iOS, Android基本都将这个视口分辨率设置为 980px\r\n> ```\r\n>\r\n> ​\t\t`视觉视口 visual viewport`\r\n>\r\n> ```html\r\n> 是网站的区域。\r\n> 可以通过缩放去操作视觉视口\r\n> 但不会影响布局视口，布局视口仍保持原来的宽度\r\n> ```\r\n>\r\n> ​\t\t`理想视口 ideal viewport`\r\n>\r\n> ```html\r\n> 为了使网站在移动端有最理想的浏览和阅读宽度而设定，对设备来讲，是最理想的视口尺寸\r\n> 需要手动添写meta视口标签通知浏览器操作\r\n> meta视口标签的主要目的：布局视口的宽度应该与理想视口的宽度一致\r\n> 我们开发最终会用理想视口，而理想视口就是将布局视口的宽度修改为视觉视口\r\n> ```\r\n>\r\n> ​\t`meta标签`\r\n>\r\n> ```html\r\n> width 宽度设置的是 viewport宽度，可以设置 device-width特殊值\r\n> initiaI-scale 初始缩放比，大于0的数字\r\n> maximum-scale  最大缩放比，大于0的数字\r\n> minimum-scale 最小缩放比，大于0的数字\r\n> user-scalable 用户是否可以缩放，yes或no（1或0）\r\n> ```\r\n>\r\n> ​\t`最标准的viewport设置`\r\n> ​\t\t\r\n>\r\n> ```html\r\n> 视口宽度和设备保持一致\r\n> 视口的默认缩放比例 1.0\r\n> 不允许用户自行缩放\r\n> 最大允许的缩放比例 1.0\r\n> 最小允许的缩放比例 1.0\r\n> ```\r\n>\r\n> \r\n\r\n\r\n\r\n> ![image-20211204003041761](06-移动端开发及Flex伸缩布局.assets/image-20211204003041761.png)\r\n>\r\n> **3：二倍图**\r\n> \t`物理像素&物理像素比`\r\n>\r\n> ```html\r\n> 物理像素点指的是屏幕显示的最小颗粒，是物理真实存在的。这是厂商在出厂时就设置好了\r\n> 开发时候的1px 不是一定等于1个物理像素\r\n> 在标准的viewport设置中，使用倍图来提高图片质量，解决在高清设备中的模糊问题\r\n> ```\r\n>\r\n> ​\t`背景缩放 background-size`\r\n>\r\n> ```html\r\n> 背景图像的尺寸  background-size: 背景图片宽度 背景图片高度;\r\n> 单位： 长度|百分比|cover|contain;\r\n> ```\r\n>\r\n> \r\n\r\n> ![image-20211204010636453](06-移动端开发及Flex伸缩布局.assets/image-20211204010636453.png)\r\n>\r\n> **4：移动开发选择和技术解决方案**\r\n> \t`移动端主流方案`\r\n>\r\n> ```html\r\n> `单独制作移动端页面（主流）`\r\n> 通过判断设备，跳到移动端页面。\r\n> PC端和移动端为两套页面代码，两套样式方案\r\n> `响应式页面兼容移动端（其次）`\r\n> 即pc和移动端共用一套网站，只不过在不同屏幕下，样式会自动适配\r\n> ```\r\n>\r\n> ​\t`移动端技术解决方案`\t\r\n>\r\n> ```html\r\n> `移动端浏览器兼容问题`\r\n> 以 webkit 内核为主\r\n> 使用 H5 标签和 CSS3 样式\r\n> `移动端公共样式`\r\n> 移动端 CSS 初始化推荐使用 normalize.css/\r\n> Normalize.css：保护了有价值的默认值\r\n> Normalize.css：修复了浏览器的bug\r\n> Normalize.css：是模块化的\r\n> Normalize.css：拥有详细的文档\r\n> http://necolas.github.io/normalize.css/\r\n> ```\r\n>\r\n> ​\t`CSS3盒子模型box-sizin`\r\n>\r\n> ```html\r\n> CSS3盒子模型：盒子的宽度=  CSS中设置的宽度width 里面包含了 border 和 padding \r\n> CSS3中的盒子模型， padding 和 border 不会撑大盒子了\r\n> /*CSS3盒子模型*/\r\n> box-sizing: border-box;\r\n> /*传统盒子模型*/\r\n> box-sizing: content-box;\r\n> ```\r\n>\r\n> ​\t`移动端特殊样式`\r\n>\r\n> ```html\r\n>  /*CSS3盒子模型*/\r\n>  box-sizing: border-box;\r\n>  -webkit-box-sizing: border-box;\r\n>  /*点击高亮我们需要清除清除  设置为transparent 完成透明*/\r\n>  -webkit-tap-highlight-color: transparent;\r\n>  /*在移动端浏览器默认的外观在iOS上加上这个属性才能给按钮和输入框自定义样式*/\r\n>  -webkit-appearance: none;\r\n>  /*禁用长按页面时的弹出菜单*/\r\n>  img,a { -webkit-touch-callout: none; }\r\n> ```\r\n>\r\n> ​\t**移动端常见布局**\r\n>\r\n> `移动端单独制作`\r\n>\r\n> ```\r\n> 流式布局（百分比布局）\r\n> flex 弹性布局（强烈推荐）\r\n> less+rem+媒体查询布局\r\n> 混合布局\r\n> ```\r\n>\r\n> `响应式`\r\n>\r\n> ```html\r\n> 媒体查询\r\n> bootstarp\r\n> ```\r\n>\r\n> `流式布局`\r\n>\r\n> ```html\r\n> 流式布局，就是百分比布局，也称非固定像素布局。\r\n> 是移动web开发使用的比较常见的布局方式\r\n> ```\r\n\r\n> \r\n>\r\n> ![image-20211204013620509](06-移动端开发及Flex伸缩布局.assets/image-20211204013620509.png)\r\n>\r\n> **5：flex布局**\r\n> \t`flex布局原理`\r\n>\r\n> ```html\r\n> flex 是 flexible Box 的缩写，意为"弹性布局"\r\n> 用来为盒状模型提供最大的灵活性，任何一个容器都可以指定为 flex 布局。\r\n> 为父盒子设为 flex 布局以后，子元素的 float、clear 和 vertical-align 属性将失效\r\n> flex布局又叫伸缩布局 、弹性布局 、伸缩盒布局 、弹性盒布局 \r\n>  Flex 容器的所有子元素自动成为容器成员\r\n> ```\r\n>\r\n> ​\t`父项常见属性`\r\n>\r\n> ```html\r\n> flex-direction：设置主轴的方向\r\n> justify-content：设置主轴上的子元素排列方式\r\n> flex-wrap：设置子元素是否换行  \r\n> align-content：设置侧轴上的子元素的排列方式（多行）\r\n> align-items：设置侧轴上的子元素排列方式（单行）\r\n> flex-flow：复合属性，相当于同时设置了 flex-direction 和 flex-wrap\r\n> ```\r\n>\r\n> ​\t`父项常见属性值`\r\n>\r\n> ```html\r\n> `flex-direction设置主轴的方向`\r\n> 在 flex 布局中，是分为主轴和侧轴两个方向，同样的叫法有 ： 行和列、x 轴和y 轴\r\n> 默认主轴方向就是 x 轴方向，水平向右\r\n> 默认侧轴方向就是 y 轴方向，水平向下\r\n> 主轴和侧轴是会变化的，就看 flex-direction 设置谁为主轴，剩下的就是侧轴\r\n> \r\n> ```\r\n>\r\n> `属性值及含义`\r\n>\r\n> ```html\r\n> row：默认值从左到右\r\n> row-reverse：从右到左\r\n> column ： 从上到下\r\n> column-reverse：从下到上\r\n> ```\r\n>\r\n> `justify-content 设置主轴上的子元素排列方式`\r\n>\r\n> ```html\r\n> fex- start 默认值从头部开始，如果主轴是x轴，则从左到右\r\n> flex-end 从尾部开始排列\r\n> center 在主轴居中对齐（如果主轴是x轴则水平居中）\r\n> space-around 平分剩余空间\r\n> space-between 先两边贴边，再平分剩余空间（重要）\r\n> \r\n> \r\n> ```\r\n>\r\n> ​\t\t`flex-wrap设置是否换行`\r\n>\r\n> ```html\r\n> 默认情况下，项目都排在一条线（又称”轴线”）上。\r\n> flex-wrap属性定义，flex布局中默认是不换行的。\r\n> nowrap 不换行\r\n> wrap 换行\r\n> ```\r\n>\r\n> `align-items 设置侧轴上的子元素排列方式（单行 ）`\r\n>\r\n> ```html\r\n> 该属性是控制子项在侧轴（默认是y轴）上的排列方式  在子项为单项（单行）的时候使用\r\n> flex-start 从头部开始\r\n> flex-end 从尾部开始\r\n> center 居中显示\r\n> stretch 拉伸\r\n> ```\r\n>\r\n> `align-content  设置侧轴上的子元素的排列方式（多行）`\r\n>\r\n> ```html\r\n> 设置子项在侧轴上的排列方式 并且只能用于子项出现 换行 的情况（多行），在单行下是没有效果的\r\n> flex-start 默认值在侧轴的头部开始排列\r\n> flex-end 在侧轴的尾部开始排列\r\n> center  在侧轴中间显示\r\n> space-around 子项在侧轴平分剩余空间\r\n> space-between  子项在侧轴先分布在两头，再平分剩余空间\r\n> stretch 设置子项元素高度平分父元素高度\r\n> ```\r\n>\r\n> `align-content 和align-items区别`\r\n>\r\n> ```html\r\n> align-items  适用于单行情况下， 只有上对齐、下对齐、居中和 拉伸\r\n> align-content适应于换行（多行）的情况下（单行情况下无效）， 可以设置 上对齐、下齐、居中、拉伸以及平均分配剩余空间等属性值。 \r\n> 总结就是单行找align-items  多行找 align-content\r\n> ```\r\n>\r\n> `flex-flow 属性`\r\n>\r\n> ```html\r\n> 是 flex-direction 和 flex-wrap 属性的复合属性\r\n> flex-flow:row wrap;\r\n> ```\r\n>\r\n> `flex布局子项常见属性`\r\n>\r\n> ​\t`flex 属性`\r\n>\r\n> ```html\r\n> \tflex 属性定义子项目分配剩余空间，用flex来表示占多少份数\r\n> ​\t.item {\r\n> flex: <number>; /* 默认值 0 */\r\n> }\r\n> ```\r\n>\r\n>\r\n> ​\t\t`align-self控制子项自己在侧轴上的排列方式`\r\n>\r\n> ```html\r\n> 属性允许单个项目有与其他项目不一样的对齐方式，可覆盖 align-items 属性\r\n> 默认值为 auto，表示继承父元素的 align-items 属性，如果没有父元素，则等同于 stretch \r\n> span:nth-child(2) {\r\n> /* 设置自己在侧轴上的排列方式 */\r\n>   align-self: flex-end;\r\n>   }\r\n> ```\r\n> ​\t\t`order 属性定义项目的排列顺序`\r\n>\r\n> ```html\r\n> 数值越小，排列越靠前，默认为0\r\n> .item {\r\n>  order: <number>;\r\n> }\r\n> 注意：和 z-index 不一样\r\n> ```\r\n\r\n\r\n​\t\r\n​\t\r\n\r\n\r\n\r\n\r\n\r\n\r\n'},dac4:function(t,n,r){"use strict";r.r(n),n["default"]='\r\n\r\n# 移动Web开发\r\n\r\n1：rem适配布局\r\n\trem单位\r\n\t\t是一个相对单位，类似于em，em是父元素字体大小\r\n\t\t不同的是rem的基准是相对于html元素的字体大小\r\n\t\trem的优势：父元素文字大小可能不一致， 但是整个页面只有一个html，可以很好来控制整个页面的元素大小\r\n\t\t/* 根html 为 12px */\r\nhtml {\r\n   font-size: 12px;\r\n}\r\n/* 此时 div 的字体大小就是 24px */       \r\ndiv {\r\n    font-size: 2rem;\r\n}\r\n\r\n2：媒体查询 \r\n\t什么是媒体查询\r\n\t\t媒体查询（Media Query）是CSS3新语法。\r\n\t\t使用 @media查询，可以针对不同的媒体类型定义不同的样式\r\n\t\t@media 可以针对不同的屏幕尺寸设置不同的样式\r\n\t\t重置浏览器大小的过程中，页面也会根据浏览器的宽度和高度重新渲染页面 \r\n\t\t手机，平板等设备都用得到多媒体查询\r\n\t媒体查询语法规范\r\n\t\t用 @media开头 注意@符号\r\n\t\tmediatype  媒体类型\r\n\t\t\tall 用于所有设备\r\n\t\t\tprint 用于打印机和打印预览\r\n\t\t\tscree  用于电脑屏幕，平板电脑，智能手机等\r\n\t\t关键字\r\n\t\t\t关键字将媒体类型或多个媒体特性连接到一起做为媒体查询的条件\r\n\t\t\tand：可以将多个媒体特性连接到一起，相当于“且”的意思。\r\n\t\t\tnot：排除某个媒体类型，相当于“非”的意思，可以省略。\r\n\t\t\tonly：指定某个特定的媒体类型，可以省略。    \r\n\t\tmedia feature 媒体特性\r\n\t\t\t必须有小括号包含\r\n\t\t\t不同媒体类型的媒体特性设置不同的展示风格\r\n\t\t\twidth 定义输出设备中页面可见区域的宽度\r\n\t\t\tmin-width 定义输出设备中页面最小可见区域宽度\r\n\t\t\tmax-width 定义输出设备中页面最大可见区域宽度\r\n\t\t\r\n\trem与媒体查询配合\r\n\r\n\r\n​\t\t\r\n\r\n3：less 基础\r\n\tcss弊端\r\n\t\tCSS 是一门非程序式语言，没有变量、函数、SCOPE（作用域）等概念。\r\n\t\tCSS 需要书写大量看似没有逻辑的代码，CSS 冗余度是比较高的。\r\n\t\t不方便维护及扩展，不利于复用。\r\n\t\tCSS 没有很好的计算能力\r\n\t\t非前端开发工程师来讲，往往会因为缺少 CSS 编写经验而很难写出组织良好且易于维护的 CSS 代码项目。 \r\n\tLess 介绍(http://lesscss.cn/)\r\n\t\tLess 是一门 CSS 预处理语言，它扩展了 CSS 语言，增加了变量、Mixin、函数等特性，使 CSS 更易维护和扩展。\r\n\t\t常见的CSS预处理器：Sass、Less、Stylus\r\n\t\tLess安装\r\n\t\t\t安装nodejs，可选择版本(8.0)\r\n\t\t\t使用cmd命令“npm install -g less”即安装less\r\n\t\t\tlessc -v  查看版本\r\n\t\tLess 变量\r\n\t\t\t变量是指没有固定的值，可以改变的\r\n\t\t\t@变量名:值;\r\n\t\t\t\t必须有@为前缀\r\n\t\t\t\t不能包含特殊字符\r\n\t\t\t\t不能以数字开头\r\n\t\t\t\t大小写敏感\r\n\t\t\t\t@color: pink;\r\n\t\t\r\n\tLess 编译\r\n\t\tVS Code 插件安装及使用\r\n\t\t\t\r\n\t\t\t保存一下Less文件，会自动生成同名的CSS文件\r\n\t\t\tHTML 中引入生成后的CSS 文件即可\r\n\tLess 嵌套\r\n\t\t\r\n\t\t遇见 （交集|伪类|伪元素选择器） ，利用&进行连接\r\n\t\t\t\r\n\tLess 运算\r\n\t\tLess提供了加（+）、减（-）、乘（*）、除（/）算术运算。\r\n\t\t任何数字、颜色或者变量都可以参与运算\r\n\t\t\r\n\t\t注意\r\n\t\t\t乘号（*）和除号（/）的写法  \r\n\t\t\t运算符中间左右有个空格隔开 1px + 5\r\n\t\t\t对于两个不同的单位的值之间的运算，运算结果的值取第一个值的单位 \r\n\t\t\t如果两个值之间只有一个值有单位，则运算结果就取该单位\r\n\r\n4：rem适配方案\r\n\t原理\r\n\t\t当设备尺寸发生改变的时候，等比例适配当前设备\r\n\t\t.使用媒体查询根据不同设备按比例设置html的字体大小\r\n\t\t页面元素使用rem做尺寸单位\r\n\t\t当html字体大小变化元素尺寸也会发生变化\r\n\t设计稿常见尺寸\r\n\t\tphone 4.5  ： 640px\r\n\t\tiphone 678 ：750px\r\n\t\tAndroid ： 常见320pX、360pX、375pX、384pX、400pX、414pX500p×、720pX ；大部分4.7~5寸的安卓设备为720pX\r\n\t\t放弃极端屏或对其优雅降级，牺牲一些效果\r\n\t\t基本以750为准\r\n\tless+rem+媒体查询 方案\r\n\t\t①假设设计稿是750px\r\n\t\t②假设我们把整个屏幕划分为15等份（划分标准不一可以是20份也可以是10等份）\r\n\t\t③每一份作为html字体大小，这里就是50px\r\n\t\t④那么在320px设备的时候，字体大小为320/15就是  21.33px\r\n\t\t⑤用我们页面元素的大小除以不同的 html字体大小会发现他们比例还是相同的\r\n\t\t⑥比如我们以750为标准设计稿\r\n\t\t⑦一个100*100像素的页面元素在  750屏幕下，  就是 100/ 50  转换为rem  是  2rem*2rem  比例是1比1\r\n\t\t⑧320屏幕下，  html字体大小为21.33   则 2rem=  42.66px  此时宽和高都是 42.66  但是宽和高的比例还是 1比1\r\n\t\t⑨但是已经能实现不同屏幕下  页面元素盒子等比例缩放的效果\r\n\t\t总结：\r\n\t\t\t①最后的公式：页面元素的rem值 =  页面元素值（px） /  （屏幕宽度  /  划分的份数）\r\n\t\t\t②屏幕宽度/划分的份数就是 htmlfont-size 的大小\r\n\t\t\t③或者：页面元素的rem值 =  页面元素值（px） /  html font-size 字体大小\r\n\tflexible.js+rem 方案(推举)\r\n\t\t相关资料\r\n\t\t\thttps://www.w3cplus.com/css/vw-for-layout.html\r\n\t\t\thttps://github.com/amfe/article/issues/17\r\n\t\t详见：第三阶段--\x3e 第五章->5-2小节\r\n\r\n5：响应式布局\r\n\t响应式开发原理\r\n\t\t使用媒体查询针对不同宽度的设备进行布局和样式的设置\r\n\t\t设备的划分情况\r\n\t\t\t小于768的为超小屏幕（手机）\r\n\t\t\t768~992之间的为小屏设备（平板）\r\n\t\t\t992~1200的中等屏幕（桌面显示器）\r\n\t\t\t大于1200的宽屏设备（大桌面显示器）\r\n\t响应式布局容器\r\n\t\t响应式需要一个父级做为布局容器，来配合子级元素来实现变化效果\r\n\t\t在不同屏幕下，通过媒体查询来改变这个布局容器的大小，再改变里面子元素的排列方式和大小\r\n\t\t父容器版心的尺寸划分\r\n\t\t\t超小屏幕（手机，小于 768px）：设置宽度为 100%\r\n\t\t\t小屏幕（平板，大于等于 768px）：设置宽度为 750px\r\n\t\t\t中等屏幕（桌面显示器，大于等于 992px）：宽度设置为 970px\r\n\t\t\t大屏幕（大桌面显示器，大于等于 1200px）：宽度设置为 1170px \r\n\r\n6：Bootstrap\r\n\tbootstrap介绍\r\n\t\t目前最受欢迎的前端框架\r\n\t\t它有一套比较完整的网页功能解决方案，而且控制权在框架本身，有预制样式库、组件和插件\r\n\t\tbootstrap优点\r\n\t\t\t标准化的html+css编码规范\r\n\t\t\t提供了一套简洁、直观、强悍的组件\r\n\t\t\t有自己的生态圈，不断的更新迭代\r\n\t\t\t让开发更简单，提高了开发的效率\r\n\t\t版本\r\n\t\t\t2.x.x：停止维护,兼容性好,代码不够简洁，功能不够完善。\r\n\t\t\t3.x.x：目前使用最多,稳定,但是放弃了IE6-IE7。对 IE8 支持但是界面效果不好,偏向用于开发响应式布局、移动设备优先的WEB 项目。\r\n\t\t\t4.x.x：最新版，目前还不是很流行\r\n\tbootstrap基本使用\r\n\t\t下载代码，创建文件夹结构  \r\n\t\t\t\r\n\t\t创建 html 骨架结构 \r\n\t\t\t\r\n\t\t引入相关样式文件  \r\n\t\t\t\r\n\t\t书写内容 \r\n\t\t\t\r\n\t\t\t权重较低，自定义样式会覆盖Bootstrap\r\n\tbootstrap布局容器\r\n\t\tBootstrap 需要为页面内容和栅格系统包裹一个 .container 或者.container-fluid 容器\r\n\t\t预先定义好了 . container 类 和 .container-fluid 类\r\n\t\t.container\r\n\t\t\t响应式布局的容器  固定宽度\r\n\t\t\t大屏 ( >=1200px)  宽度定为 1170px\r\n\t\t\t中屏 ( >=992px)   宽度定为  970px\r\n\t\t\t小屏 ( >=768px)   宽度定为  750px\r\n\t\t\t超小屏  (100%) \r\n\t\t.container-fluid\r\n\t\t\t流式布局容器 百分百宽度\r\n\t\t\t占据全部视口（viewport）的容器。\r\n\tbootstrap栅格系统\r\n\t\t一套响应式、移动设备优先的流式栅格系统，随着屏幕或视口（viewport）尺寸的增加，系统会自动分为最多12列\r\n\t\t栅格系统用于通过一系列的行（row）与列（column）的组合来创建页面布局\r\n\t\t基础应用\r\n\t\t\t按照不同屏幕划分为12 等份\r\n\t\t\t行（row） 可以去除父容器作用15px的边距\r\n\t\t\txs-extra small：超小； sm-small：小；  md-medium：中等； lg-large：大；\r\n\t\t\t列（column）大于 12，多余的“列（column）”所在的元素将被作为一个整体另起一行排列\r\n\t\t\t每一列默认有左右15像素的 padding\r\n\t\t\t可以同时为一列指定多个设备的类名，以便划分不同份数  例如 class="col-md-4 col-sm-6"\r\n\t\t栅格嵌套\r\n\t\t\t栅格系统内置的栅格系统将内容再次嵌套\r\n\t\t\t可以通过添加一个新的 .row 元素和一系列 .col-sm-* 元素到已经存在的 .col-sm-*  元素内\r\n\t\t列偏移\r\n\t\t\t使用 .col-md-offset-* 类可以将列向右侧偏移\r\n\t\t\t\r\n\t\t列排序\r\n\t\t\t通过使用 .col-md-push-* 和 .col-md-pull-* 类就可以很容易的改变列（column）的顺序。\r\n\t\t\t\r\n\t\t响应式工具'}}]);